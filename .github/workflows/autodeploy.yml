---
name: Build and Deploy Docker Image to ECR and ECS
on:
  push:
    branches:
      - develop
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: <YOUR_ECR_REPOSITORY_NAME>
  ECS_CLUSTER: <YOUR_ECS_CLUSTER_NAME>
  ECS_SERVICE: <YOUR_ECS_SERVICE_NAME>
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and tag the Docker image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ env.ECR_REPOSITORY }}:${{ github.sha }}
      - name: Tag the Docker image
        id: tag-image
        run: echo "::set-output name=image-uri::${{ env.ECR_REPOSITORY }}:${{ github.sha
          }}"
      - name: Push the Docker image to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.tag-image.outputs.image-uri }}
      - name: Update the ECS service
        uses: aws-actions/amazon-ecs-deploy@v2
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}
          image: ${{ steps.tag-image.outputs.image-uri }}
          wait-for-service-stability: true
