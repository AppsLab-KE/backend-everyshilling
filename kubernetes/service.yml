apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/backend-protocol-version: GRPC
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/subnets: subnet-XXXXXX,subnet-YYYYYY   # <----- Replace with the Public Subnets within the VPC that hosts the Amazon EKS cluster
    alb.ingress.kubernetes.io/security-groups: sg-ZZZZZZZZ.  # <----- Replace with a security group ID from the VPC where the Amazon EKS cluster is deployed. Make sure that this security group is allowed to access the nodes
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:xxxxx:certificate/xxxxxxx  #<----- Replace with the ACM certificate ARN for the DNS hostname
  labels:
    app: grpcserver
    environment: dev
  name: grpcserver
  namespace: grpcserver
spec:
  rules:
  - host: grpc.example.com  # <----- Replace as required by your host name that the SSL certificate is available for in ACM
    http:
      paths:
      - backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
        path: /*
      - backend:
          serviceName: grpcserver
          servicePort: 9000