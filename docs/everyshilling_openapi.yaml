openapi: 3.0.3
info:
  title: Every shillings Auth OpenAPI endpoint
  description: Every Shilling
  version: 2022-04-01
  termsOfService: https://everyshilling.ke/terms
  contact:
    name: Everyshilling
    email: everyshilling@co.ke
    url: https://everyshilling.ke
servers:
  - url: ''
    description: 'Mock server'
  - url: ''
    description: 'Local'
  - url: ''
    description: 'Staging'
  - url: ''
    description: 'Production'
paths:
  /login/:
    post:
      operationId: "Login"
      summary: Generate OTP and send it to email and phone number
      description: Endpoint to generate OTP and send it to user's email and phone number. The user needs to enter the OTP to complete the login process.
      tags: [Login]
      requestBody:
        description: User's login credentials
        content:
          application:
            schema:
              $ref: "#/components/schemas/RequestLogin"
      responses:
        '200':
          description: OTP generated and sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        '400':
          description: 'Bad request: eg invalid phone number'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        '500':
          description: Internal server errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /login/{tracking-uuid}/verify:
    post:
      operationId: "VerifyLoginOTP"
      summary: Verify the OTP
      description: Send the OTP to the server for verification.
      tags: [ Login ]
      parameters:
        - name: tracking-uuid
          description: "Login request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"

      requestBody:
        description: OTP received via SMS
        content:
          application:
            schema:
              $ref: "#/components/schemas/RequestOTP"
      responses:
        '200':
          description: OTP generated and sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        '400':
          description: 'Bad request: missing email or phone number'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        '500':
          description: Internal server errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

# Registration endpoint
  /register:
    summary: Register new users to the system
    description:  User account registration
    post:
      summary: A POST request to registering new users
      security: []
      operationId: register
      tags:
        - Register
      description: register post
      requestBody:
        description: registration request object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"

      responses:
        '200':
          description: succesfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        default:
          description: errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
    # forget password
  /reset:
    summary: Allow users to send forget password requests
    post:
      operationId: "Reset"
      tags: [ Password Reset ]
      summary: "Send password reset OTP"
      description: Collect user email an send reset OTP
      requestBody:
        content:
          application/json:
            schema:
               $ref: "#/components/schemas/Phone"

      responses:
        '200':
          description: A tokenized password reset login to be send to the phone
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuccess"

        '404':
          description: 'Email address not found'
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/ResponseError"
  /reset/{tracking-uuid}/verify:
    post:
      operationId: "VerifyResetOTP"
      tags: [ Password Reset ]
      summary: "Verify OTP"
      description: "Once a user has sent their email, they receive an OTP code for verifying if indeed they are the owners of the account"
      parameters:
        - name: tracking-uuid
          description: "Password reset request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"
      requestBody:
        description: "The 6 Digit OTP code sent to the user's email"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestOTP"

      responses:
        200:
          description: "Verification successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuccess"

        401:
          description: "Verification failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
        404:
          description: "Request ID not found/valid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"

  /reset/{tracking-uuid}/change:
    post:
      operationId: "ChangePassword"
      tags: [ Password Reset ]
      summary: "Change Password"
      description: "On successful OTP verification, user sends a new password"
      parameters:
        - name: tracking-uuid
          description: "Password reset request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"
      requestBody:
        description: "The user's new passwords"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestResetCredentials"
      responses:
        200:
          description: "Reset successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSuccess"

        400:
          description: "Password mismatch"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"

        401:
          description: "Verification failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"

        404:
          description: "Request ID not found/valid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseError"
tags:
  - name: Register
    description: Registration description

  - name: Login
    description: Login description

  - name: Password Reset
    description: Help the user gain access and reset password


components:
  schemas:
    RequestOTP:
      type: object
      properties:
        otp_code:
          type: string
          description: Generated OTP

    RegisterRequest:
      type: object
      properties:
        name:
          description: name
          type: string
          example: john doe
        email:
          type: string
          description: valid email
          example: john.doe@example.com
        phone number:
          type: string
          description: valid phone number
          example: "+2541234567"
        password:
          type: string
          description: strong password
          example: secureP@ssword
          minLength: 6
          maxLength: 16

      required:
        - name
        - email
        - phone number
        - password

    ResponseError:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
        error:
          type: string

    ResponseSuccess:
      type: object
      properties:
        message:
          type: string
          example: "Password Reset Success"
        code:
          type: string
          example: "RESET_SUCCESS"
        error:
          type: string

    RequestResetCredentials:
      type: object
      properties:
        password:
          type: string
          example: "BlackApple78"
        confirm_password:
          type: string
          example: "BlackApple78"

    RequestLogin:
      type: object
      properties:
        phone:
          type: string
          description: User's phone number

        password:
          type: string
          description: User's password
      required:
        - phone
        - password

    Response:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: number
        data:
          type: object

    Email:
      type: object
      properties:
        email:
          type: string
          description: valid email
          example: john.doe@example.com
    Phone:
      type: object
      properties:
        email:
          type: string
          description: valid phone
          example: +254702998282