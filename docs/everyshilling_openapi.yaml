openapi: 3.0.3
info:
  title: Every shillings Auth OpenAPI endpoint
  description: Every Shilling
  version: 2022-04-01
  termsOfService: https://everyshilling.ke/terms
  contact:
    name: Everyshilling
    email: everyshilling@co.ke
    url: https://everyshilling.ke
servers:
  - url: "http://localhost:4010"
    description: "Mock server"
  - url: "http://localhost:3002/api"
    description: "Local"
  - url: ""
    description: "Staging"
  - url: ""
    description: "Production"
paths:
  /users/{userId}/show:
    summary: this shows the profile of a single user
    description: single user
    get:
      security: [ ]
      summary: A GET request to /users/{userId}
      operationId: getUserById
      description: get user by id
      tags: [Users]
      requestBody:
        description: User's login credentials
        content:
          application:
            schema:
              $ref: "#/components/schemas/RequestUser"
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: string
            example: dlfhlds-sdkfbkjsdbf-sdkfbjk
      responses:
        '200':
          description: user object response
          content:

            application/json:
              schema:
                $ref: "#/components/schemas/UserResponseData"

        default:
          description: error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  error:
                    type: string
  /auth/login:
    post:
      operationId: login
      summary: Generate OTP and send it to email and phone number
      description: Endpoint to generate OTP and send it to user's email and phone number. The user needs to enter the OTP to complete the login process.
      tags: [Login]
      requestBody:
        description: User's login credentials
        content:
          application:
            schema:
              $ref: "#/components/schemas/RequestLogin"
      responses:
        "200":
          description: OTP generated and sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponseData"
        "400":
          description: "Bad request: eg invalid phone number"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequest"
        "500":
          description: Internal server errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseServerError"

  /auth/login/otp/{tracking-uuid}/verify:
    post:
      operationId: "VerifyLoginOTP"
      summary: Verify the OTP
      description: Send the OTP to the server for verification.
      tags: [Login]
      parameters:
        - name: tracking-uuid
          description: "Login request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"

      requestBody:
        description: OTP received via SMS
        content:
          application:
            schema:
              $ref: "#/components/schemas/RequestOTP"
      responses:
        "200":
          description: OTP generated and sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPResponseData"
        "400":
          description: "Bad request: missing email or phone number"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Internal server errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseServerError"
  /auth/login/otp/{tracking-uuid}/resend:
    get:
      operationId: "ResendLoginOTP"
      summary: Resend login OTP
      description: resend the OTP to the server for verification.
      tags: [Login]
      parameters:
        - name: tracking-uuid
          description: "Login request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"
      responses:
        "200":
          description: OTP generated and sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPResponse"
        "400":
          description: "Bad request: invalid uuid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadOTPRequest"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /auth/register:
    summary: Register new users to the system
    description: User account registration
    post:
      summary: A POST request to registering new users
      operationId: register
      tags:
        - Register
      description: register post
      requestBody:
        description: registration request object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"

      responses:
        "200":
          description: successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponseData"
        "400":
          description: Default error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /auth/reset:
    summary: Allow users to send forget password requests
    post:
      operationId: "Reset"
      tags: [Password Reset]
      summary: "Send password reset OTP"
      description: Collect user phone an send reset OTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Phone"

      responses:
        "200":
          description: A tokenized password reset login to be send to the phone
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

        "404":
          description: "Phone not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /auth/reset/otp/{tracking-uuid}/verify:
    post:
      operationId: "VerifyResetOTP"
      tags: [Password Reset]
      summary: "Verify OTP"
      description: "Once a user has sent their phone, they receive an OTP code for verifying if indeed they are the owners of the account"
      parameters:
        - name: tracking-uuid
          description: "Password reset request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"

      requestBody:
        description: "The 6 Digit OTP code sent to the user's email"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestOTP"

      responses:
        "200":
          description: "Verification successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPResponseData"

        "401":
          description: "Verification failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: "Request ID not found/valid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /auth/reset/{tracking-uuid}/change:
    post:
      operationId: "ChangePassword"
      tags: [Password Reset]
      summary: "Change Password"
      description: "On successful OTP verification, user sends a new password"
      parameters:
        - name: tracking-uuid
          description: "Password reset request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"

      requestBody:
        description: "The user's new passwords"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestResetCredentials"
      responses:
        "200":
          description: "Reset successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

        "400":
          description: "Password mismatch"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

        "401":
          description: "Verification failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

        "404":
          description: "Request ID not found/valid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /auth/reset/otp/{tracking-uuid}/resend:
    get:
      operationId: "ResendResetOTP"
      summary: Resend reset OTP
      description: resend the OTP to the server for verification.
      tags: [Password Reset]
      parameters:
        - name: tracking-uuid
          description: "Password reset request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"

      responses:
        "200":
          description: OTP generated and sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPResponse"
        "400":
          description: "Bad request: invalid uuid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /auth/verify:
    post:
      operationId: "VerifyPhone"
      summary: Verify phone number
      description: resend the OTP to the server for verification.
      tags: [Phone Verification]
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Phone"
      responses:
        "200":
          description: OTP generated and sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPResponse"
        "400":
          description: "Bad request: invalid uuid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
  /auth/verify/otp/{tracking-uuid}/verify:
    post:
      operationId: "VerifyVerificationOTP"
      tags: [Phone Verification]
      summary: "Verify OTP"
      description: "Once a user has sent their email, they receive an OTP code for verifying if indeed they are the owners of the account"
      security:
        - Bearer: []
      parameters:
        - name: tracking-uuid
          description: "Verificatiion request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"

      requestBody:
        description: "The 6 Digit OTP code sent to the user's phone"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestOTP"

      responses:
        "200":
          description: "Verification successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

        "401":
          description: "Verification failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: "Request ID not found/valid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /auth/verify/otp/{tracking-uuid}/resend:
    get:
      operationId: "ResendVerificationOTP"
      summary: Resend verification OTP
      description: resend the OTP to the user's phone
      tags: [Phone Verification]
      security:
        - Bearer: []
      parameters:
        - name: tracking-uuid
          description: " request UUID"
          required: true
          in: path
          schema:
            type: string
            example: "f8e33eb4-d6da-4c2e-9857-8294b178e361"

      responses:
        "200":
          description: OTP generated and sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: "Bad request: invalid uuid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"

  /auth/logout:
    get:
      summary: Invalidatation to access token and logout user
      description: Endpoint to invalidate access token and log out the user.
      tags: [Login]
      operationId: "Logout"
      security:
        - Bearer: []
      requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/LogoutRequest"
      responses:
        "200":
          description: User logged out successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogoutResponseData"
        "401":
          description: "Unauthorized: Invalid or expired token"
        "500":
          description: Internal server error


  /auth/refresh-token:
    post:
      summary: Refresh access token using refresh token
      description: Endpoint to refresh access token using refresh token.
      tags: [Login]
      operationId: "RefreshToken"
      requestBody:
        description: User's refresh token
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenReq"
      responses:
        "200":
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshTokenRes"
        "400":
          description: "Bad request: missing or invalid refresh token"
        "500":
          description: Internal server error
tags:
  - name: Register
    description: Registration description
  - name: Users
    description: Users path

  - name: Login
    description: Login description

  - name: Password Reset
    description: Help the user gain access and reset password
  - name: Phone Verification
    description: Make sure the user's phone is valid inorder to activate the account

components:
  securitySchemes:
    Bearer: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RequestOTP:
      type: object
      properties:
        otp_code:
          type: string
          description: Generated OTP
      required:
        - otp_code
        -
    RequestUser:
          type: object
          description: user object
          properties:
            name:
              type: string
              example: John Doe
            email:
              type: string
              example: john.doe@example.com
    UserResponseData :
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: number
        data:
          $ref: "#/components/schemas/UserResponseObj"

    UserResponseObj :
      type: object
      properties:
        name:
          type: string
          example: john doe
        email:
          type: string
          example: john@doe.com
    RegisterRequest:
      type: object
      properties:
        name:
          description: name
          type: string
          example: john doe
        email:
          type: string
          description: valid email
          example: john.doe@example.com
        phone_number:
          type: string
          description: valid phone number
          example: "+2541234567"
        password:
          type: string
          description: strong password
          example: secureP@ssword
          minLength: 8
          maxLength: 16
      required:
        - name
        - email
        - phone_number
        - password

    RegisterResponseData:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: number
        data:
          $ref: "#/components/schemas/RegisterResponseObj"
    RegisterResponseObj:
        type: object
        properties:
          name:
            type: string
            example: john doe
          email:
            type: string
            example: john@doe.com
          phone_number:
            type: string
            example: "+254704407117"


    RequestResetCredentials:
      type: object
      properties:
        password:
          type: string
          example: "BlackApple78"
        confirm_password:
          type: string
          example: "BlackApple78"
      required:
        - password
        - confirm_password

    RequestLogin:
      type: object
      properties:
        phone:
          type: string
          description: User's phone number
          example: "+2541234567"
        password:
          type: string
          description: User's password
          example: "mike1234"

      required:
        - phone
        - password

    LoginResponseData:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: number
        data:
          $ref: "#/components/schemas/LoginResponseObj"
    LoginResponseObj :
      type: object
      properties:
        phone:
          type: string
          example: "+254704407117"
        password:
          type: string
          example: "mike1234"

    ResponseBadRequest :
      type: object
      properties:
        message:
          type: string
          example: "Invalid phone number"
        error:
          type: string
        code:
          type: number
          example: 400
        data:
          type: object
    ResponseServerError :
     type: object
     properties:
       message:
         type: string
         example: "Internal server Error"
       error:
         type: string
       code:
         type: number
         example: 500
       data:
         type: object


    OTPResponse :
      type: object
      properties:
        message:
          type: string
          example: "OTP generated and sent succesfully"
        error:
          type: string
        code:
          type: number
          example: 200
        data:
          type: object
    OTPResponseData :
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: number
        data:
          $ref: "#/components/schemas/OTPResponseObj"
    OTPResponseObj:
      type: object
      properties:
        phone:
          type: string
          example: "1234"
    ResponseBadOTPRequest:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: number
        data:
          $ref: "#/components/schemas/BadOTPResponseObj"
    BadOTPResponseObj:
      type: object
      properties:
        phone:
          type: string
          example: "1234444asd"
    ResendOTP:
      type: object
      properties:
        message:
          type: string
          example: "OTP Resent succesfully"
        error:
          type: string
        code:
          type: number
          example: 200
        data:
          type: object

    LogoutRequest:
      type: object
      properties:
        phone:
          type: string
          description: name
          example: "mike"
    LogoutResponseData :
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: number
        data:
          $ref: "#/components/schemas/LogoutResponseData"
        LogoutResponseObj:
          type: object
          properties:
            phone:
              type: string
              example: "User Logged out succesfully"


    Response:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: number
        data:
          type: object

    Email:
      type: object
      properties:
        email:
          type: string
          description: valid email
          example: john.doe@example.com
    Phone:
      type: object
      properties:
        phone:
          type: string
          description: valid phone
          example: "+254702998282"

    RefreshTokenReq:
      type: object
      properties:
        refresh_token:
          type: string
          description: User's refresh token
      required:
        - refresh_token

    RefreshTokenRes:
      type: object
      properties:
        refresh_token:
          type: string
          description: New Refresh token
        bearer_token:
          type: string
          description: New Bearer token
      required:
        - refresh_token
        - bearer_token