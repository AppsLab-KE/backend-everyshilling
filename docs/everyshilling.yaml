openapi: 3.0.3
info:
  title: Every shillings Auth OpenAPI endpoint
  description: Every Shilling
  version: 2022-04-01
  termsOfService: https://everyshilling.ke/terms
  contact:
    name: Everyshilling
    email: everyshilling@co.ke
    url: https://everyshilling.ke
servers:
  - url: 'http://127.0.0.1:4010'
    description: 'Mock server'
  - url: 'http://localhost:8080/v1'
    description: 'Local'
  - url: ''
    description: 'Staging'
  - url: ''
    description: 'Production'


paths:

# login endpoint 
# Registration endpoint   
  /register:
    summary: Register new users to the system
    description:  User account registration
    post:
      summary: A POST request to registering new users
      security: []
      operationId: register
      tags:
        - Register
      description: register post
      requestBody:
        description: registrationrequest object
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: name
                  type: string
                  example: john doe
                email:
                  type: string
                  description: valid email
                  example: john.doe@example.com
                phone number :
                  type: string
                  description: valid phone number 
                  example: "+2541234567"
                password:
                  type: string
                  description: strong password
                  example: secureP@ssword
                  minLength: 6
                  maxLength: 16
               
              required:
                - name
                - email
                - phone number
                - password
      responses:
        '200':
          description: succesfully registered
          content:
            application/json:
              schema:
                properties:
                  name:
                    type: string
                    example: Joe doe
                  email:
                    type: string
                    example: john.doe@example.com
        default:
          description: error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  error:
                    type: string
tags:

  - name: Register
    description: signin description






# forget password
  /forgetPassword:
    summary: Allow users to send forget password requests
    post:
      description:  auth email and request to change password
      parameters: 
        - in: header
          name: Authorization
          description: Basic Token (Basic REFTSEJ2QVJEOnhHbiQ3R3hSanlqNTl4Y19MVyVO)
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: valid email
                  example: john.doe@example.com

      responses:
        '200':
          description: A tokenized password reset login to be send to the user email address 
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type:string 
                    example: 'success'  

        '404':
          description: A tokenized password reset login to be send to the user email address 
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type:string 
                    example: 'Email entered not found or incorrect'                     
# reset password